networks:
  grpc-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.10.10.0/24

services:
  reverse-proxy:
    image: traefik:v3.0.0-beta2
    command: --providers.file.directory=/etc/traefik/dynamic_conf --entrypoints.websecure.address=:443 --api.insecure=true --providers.docker --log.level=DEBUG --entrypoints.grpc.address=:8090 --entrypoints.web.address=:80 --accesslog=true --accesslog.format=json --accesslog.filePath=/access.log
    ports:
      - '80:80' # The HTTP port
      - '8080:8080' # The Web UI (enabled by --api.insecure=true)
      - '8090:8090' # The gRPC entrypoint of Traefik
      - '443:443' # The HTTPS port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/config.yml:/etc/traefik/dynamic_conf/conf.yml:ro
      - ./traefik/certs:/tools/certs
    networks:
      grpc-net:
        ipv4_address: 10.10.10.10

  grpc-server-go:
    build: ./grpc-server-go
    image: skyface753/grpc-server-go
    depends_on:
      primary:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - POSTGRES_HOST=primary
      - REDIS_HOST=redis
      - S3_ENDPOINT=${S3_ENDPOINT:-http://localhost:9000}
      - S3_BUCKET=${S3_BUCKET:-template}
      - S3_USERNAME=${S3_USERNAME:-minio-root-user}
      - S3_PASSWORD=${S3_PASSWORD:-minio-root-password}
      # - TLS=TRUE
    extra_hosts:
      - 'test.skyface.de:10.10.10.10'
    labels:
      # GRPC
      - 'traefik.enable=true'
      - traefik.http.routers.grpc_server.rule=Host(`grpc.docker.localhost`)
      - traefik.http.routers.grpc_server.entrypoints=grpc
      - traefik.http.routers.grpc_server.service=grpc-svc
      - traefik.http.services.grpc-svc.loadbalancer.server.scheme=h2c
      - traefik.http.services.grpc-svc.loadbalancer.server.port=50051
      # GRPC-WEB
      - 'traefik.http.routers.mooncar.rule=Host(`grpc.docker.localhost`)'
      - 'traefik.http.routers.mooncar.entrypoints=web'
      - 'traefik.http.routers.mooncar.service=mooncar'
      - 'traefik.http.services.mooncar.loadbalancer.server.scheme=h2c'
      - 'traefik.http.middlewares.mooncar-grpc.grpcWeb.allowOrigins=*'
      - 'traefik.http.routers.mooncar.middlewares=mooncar-grpc'
    networks:
      grpc-net:
        ipv4_address: 10.10.10.2

  primary:
    image: postgres
    environment:
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=testdb
    volumes:
      - grpc-pg-vol-prod:/var/lib/postgresql/data
    networks:
      grpc-net:
        ipv4_address: 10.10.10.3
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      grpc-net:
        ipv4_address: 10.10.10.4

volumes:
  grpc-pg-vol-prod:
  grpc-minio-vol-prod:
  # minio:
  #   image: docker.io/bitnami/minio:2022
  #   # hostname: test.skyface.de
  #   environment:
  #     - MINIO_ROOT_USER=minio-root-user
  #     - MINIO_ROOT_PASSWORD=minio-root-password
  #   volumes:
  #     - grpc-minio-vol-prod:/data
  #   ports:
  #     # - '9000:9000'
  #     - '9001:9001'
  #   networks:
  #     grpc-net:
  #       ipv4_address: 10.10.10.5
  #   labels:
  #     - 'traefik.enable=true'
  #     - 'traefik.http.middlewares.minio-redirect.redirectscheme.scheme=https'
  #     - 'traefik.http.routers.minio.entrypoints=web'
  #     - 'traefik.http.routers.minio.rule=Host(`test.skyface.de`)'
  #     - 'traefik.http.routers.minio.middlewares=minio-redirect'
  #     - 'traefik.http.routers.minio_https.rule=Host(`test.skyface.de`)'
  #     - 'traefik.http.routers.minio_https.tls=true'
  #     - 'traefik.http.routers.minio_https.entrypoints=websecure'
  #     - 'traefik.http.services.minio.loadbalancer.server.port=9000'

  # - 'traefik.http.routers.minio.rule=Host(`test.skyface.de`)'
  # - 'traefik.http.routers.minio.entrypoints=web'
  # - 'traefik.http.services.minio.loadbalancer.server.scheme=http'
  # - 'traefik.http.services.minio.loadbalancer.server.port=9000'
